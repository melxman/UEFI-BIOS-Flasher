#
# Io.py
#
# Copyright (C) 2017 - 2018 efipy.core@gmail.com All rights reserved.
#
# Io.py is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 2 of the License.
#
# Io.py is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with EfiPy.  If not, see <http://www.gnu.org/licenses/>.
#

from BitOp import _MemCell, _MemArray
import _LoLeOp as _l

class _IoBit (_MemCell):

  def __str__ (self):
    tBitForm = "%%0%dX" % (self.Width >> 2)
    tOutForm = "%s[0x" + tBitForm + "] = 0x" + tBitForm
    # output sample: "%s[0x%02X] = 0x%02X" % (self.Index, int (self))
    return tOutForm % (
             self.__name__,
             self.Index,
             int (self)
             )

class _IoBit32 (_IoBit):

  def MemGet (self, port):
    return _l.IoGet32 (port)

  def MemSet (self, port, val):
    _l.IoSet32 (port, val)

class _IoBit16 (_IoBit):

  def MemGet (self, port):
    return _l.IoGet16 (port)

  def MemSet (self, port, val):
    _l.IoSet16 (port, val)

class _IoBit8 (_IoBit):

  def MemGet (self, port):
    return _l.IoGet8 (port)

  def MemSet (self, port, val):
    _l.IoSet8 (port, val & 0xFF)

Io8   = _MemArray ("Io8",   8, CellClass = _IoBit8)
Io16  = _MemArray ("Io16", 16, CellClass = _IoBit16)
Io32  = _MemArray ("Io32", 32, CellClass = _IoBit32)
