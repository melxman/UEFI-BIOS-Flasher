#
# Mem.py
#
# Copyright (C) 2017 - 2018 efipy.core@gmail.com All rights reserved.
#
# Mem.py is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 2 of the License.
#
# Mem.py is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with EfiPy.  If not, see <http://www.gnu.org/licenses/>.
#

from BitOp import _MemCell, _MemArray
import _LoLeOp as _l

class _Mem8 (_MemCell):

  def MemSet (self, Address, Value):
    _l.MemSet8 (Address, Value & 0xFF)

  def MemGet (self, Address):
    return _l.MemGet8 (Address)

class _Mem16 (_MemCell):

  def MemSet (self, Address, Value):
    _l.MemSet16 (Address, Value & 0xFFFF)

  def MemGet (self, Address):
    return _l.MemGet16 (Address)

class _Mem32 (_MemCell):

  def MemSet (self, Address, Value):
    _l.MemSet32 (Address, Value & 0xFFFFFFFF)

  def MemGet (self, Address):
    return _l.MemGet32 (Address)

class _Mem64 (_MemCell):

  def MemSet (self, Address, Value):
    _l.MemSet64 (Address, Value & 0xFFFFFFFFFFFFFFFF)

  def MemGet (self, Address):
    return _l.MemGet64 (Address)

Mem8  = _MemArray ("Mem8",   8,  CellClass = _Mem8)
Mem16 = _MemArray ("Mem16", 16,  CellClass = _Mem16)
Mem32 = _MemArray ("Mem32", 32,  CellClass = _Mem32)
Mem64 = _MemArray ("Mem64", 64,  CellClass = _Mem64)
