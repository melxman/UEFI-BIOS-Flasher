#
# EfiPyAcpiBase.py
#
# Copyright (C) 2018 efipy.core@gmail.com All rights reserved.
#
# EfiPyAcpiBase.py is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 2 of the License.
#
# EfiPyAcpiBase.py is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with EfiPy.  If not, see <http://www.gnu.org/licenses/>.
#

import struct
import EfiPy.MdePkg.IndustryStandard.Acpi as _acpi
import EfiPy
from EfiPy.MdePkg.IndustryStandard  import EFIPY_INDUSTRY_STRUCTURE
from EfiPy.MdePkg.Guid.Acpi   import  \
  gEfiAcpi10TableGuid,                \
  gEfiAcpi20TableGuid

AcpiTableAddress    = 0
Acpi20TableAddress  = 0

# (Signature, Address, Length)
AcpiTables = []

for i in xrange (EfiPy.gST.NumberOfTableEntries):
  ComGuid   = EfiPy.gST.ConfigurationTable[i].VendorGuid
  ComHandle = EfiPy.gST.ConfigurationTable[i].VendorTable

  if  ComGuid == gEfiAcpi10TableGuid:
    AcpiTableAddress    = ComHandle
    continue

  elif  ComGuid == gEfiAcpi20TableGuid:
    Acpi20TableAddress  = ComHandle
    continue

#
# Build ACPI RSDP from gEfiAcpi20TableGuid
#
Rsdp = None
if Acpi20TableAddress != 0:
  Rsdp = _acpi.EFI_ACPI_6_1_ROOT_SYSTEM_DESCRIPTION_POINTER.from_address (Acpi20TableAddress)
  _Signature = str(struct.pack ("Q", Rsdp.Signature))
  AcpiTables.append ((_Signature, Acpi20TableAddress, Rsdp.Length))

#
# Build ACPI XSDT from RSDP table
#
import AcpiXsdt
Xsdt = AcpiXsdt.BuildXsdt (Rsdp)
_signature  = str(struct.pack ("I", AcpiXsdt.Table.Signature))
_address    = AcpiXsdt.Address
_size       = AcpiXsdt.Size
AcpiTables.append ((_signature, _address, _size))

#
# Build ACPI RSDT from RSDP table
#
import AcpiRsdt
Rsdt = AcpiRsdt.BuildRsdt (Rsdp)
_signature  = str(struct.pack ("I", AcpiRsdt.Table.Signature))
_address    = AcpiRsdt.Address
_size       = AcpiRsdt.Size
AcpiTables.append ((_signature, _address, _size))

#
# Build Remain ACPI index from XSDT table
#
_FADT_temp = None
for dTable in AcpiXsdt.Table.DescriptionEntry:
  AcpiHeader = _acpi.EFI_ACPI_6_1_COMMON_HEADER.from_address (dTable)
  _Signature = str(struct.pack ("I", AcpiHeader.Signature))
  AcpiTables.append ((_Signature, dTable, AcpiHeader.Length))
  if _Signature == 'FACP':
    _FADT_temp = (_Signature, dTable)

#
# Build ACPI FACS and DSDT index from FACP index
#
if _FADT_temp != None:

  _FADT = _acpi.EFI_ACPI_6_1_FIXED_ACPI_DESCRIPTION_TABLE.from_address (_FADT_temp[1])

  # FACS Table
  _FACS = _acpi.EFI_ACPI_6_1_COMMON_HEADER.from_address (_FADT.FirmwareCtrl)
  _Signature = str(struct.pack ("I", _FACS.Signature))
  AcpiTables.append ((_Signature, _FADT.FirmwareCtrl, _FACS.Length))

  # DSDT Table
  _DSDT = _acpi.EFI_ACPI_6_1_COMMON_HEADER.from_address (_FADT.Dsdt)
  _Signature = str(struct.pack ("I", _DSDT.Signature))
  AcpiTables.append ((_Signature, _FADT.Dsdt, _DSDT.Length))
