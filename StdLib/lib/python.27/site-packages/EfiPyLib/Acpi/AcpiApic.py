#
# AcpiApic.py
#
# Copyright (C) 2018 efipy.core@gmail.com All rights reserved.
#
# AcpiApic.py is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 2 of the License.
#
# AcpiApic.py is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with EfiPy.  If not, see <http://www.gnu.org/licenses/>.
#

import EfiPy
from EfiPyAcpiBase                          import AcpiTables
from EfiPy.MdePkg.IndustryStandard          import EFIPY_INDUSTRY_STRUCTURE
from EfiPy.MdePkg.IndustryStandard.Acpi10   import EFI_ACPI_DESCRIPTION_HEADER
import EfiPy.MdePkg.IndustryStandard.Acpi61 as Acpi61

ApicSize    = 0
ApicAddress = 0

ApicDict = {
  Acpi61.EFI_ACPI_6_1_PROCESSOR_LOCAL_APIC          : Acpi61.EFI_ACPI_6_1_PROCESSOR_LOCAL_APIC_STRUCTURE,
  Acpi61.EFI_ACPI_6_1_IO_APIC                       : Acpi61.EFI_ACPI_6_1_IO_APIC_STRUCTURE,
  Acpi61.EFI_ACPI_6_1_INTERRUPT_SOURCE_OVERRIDE     : Acpi61.EFI_ACPI_6_1_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE,
  Acpi61.EFI_ACPI_6_1_NON_MASKABLE_INTERRUPT_SOURCE : Acpi61.EFI_ACPI_6_1_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE,
  Acpi61.EFI_ACPI_6_1_LOCAL_APIC_NMI                : Acpi61.EFI_ACPI_6_1_LOCAL_APIC_NMI_STRUCTURE,
  Acpi61.EFI_ACPI_6_1_LOCAL_APIC_ADDRESS_OVERRIDE   : Acpi61.EFI_ACPI_6_1_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE,
  Acpi61.EFI_ACPI_6_1_IO_SAPIC                      : Acpi61.EFI_ACPI_6_1_IO_SAPIC_STRUCTURE,
  Acpi61.EFI_ACPI_6_1_LOCAL_SAPIC                   : Acpi61.EFI_ACPI_6_1_PROCESSOR_LOCAL_SAPIC_STRUCTURE,
  Acpi61.EFI_ACPI_6_1_PLATFORM_INTERRUPT_SOURCES    : Acpi61.EFI_ACPI_6_1_PLATFORM_INTERRUPT_SOURCES_STRUCTURE,
  Acpi61.EFI_ACPI_6_1_PROCESSOR_LOCAL_X2APIC        : Acpi61.EFI_ACPI_6_1_PROCESSOR_LOCAL_X2APIC_STRUCTURE,
  Acpi61.EFI_ACPI_6_1_LOCAL_X2APIC_NMI              : Acpi61.EFI_ACPI_6_1_LOCAL_X2APIC_NMI_STRUCTURE,
  Acpi61.EFI_ACPI_6_1_GIC                           : Acpi61.EFI_ACPI_6_1_GIC_STRUCTURE,
  Acpi61.EFI_ACPI_6_1_GICD                          : Acpi61.EFI_ACPI_6_1_GIC_DISTRIBUTOR_STRUCTURE,
  Acpi61.EFI_ACPI_6_1_GIC_MSI_FRAME                 : Acpi61.EFI_ACPI_6_1_GIC_MSI_FRAME_STRUCTURE,
  Acpi61.EFI_ACPI_6_1_GICR                          : Acpi61.EFI_ACPI_6_1_GICR_STRUCTURE,
  Acpi61.EFI_ACPI_6_1_GIC_ITS                       : Acpi61.EFI_ACPI_6_1_GIC_ITS_STRUCTURE,
}

for _Signature, _Address, _Length in AcpiTables:
  if _Signature == 'APIC':

    #
    # Build APIC public information
    #
    ApicAddress = _Address
    DescHeader = Acpi61.EFI_ACPI_6_1_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER.from_address (ApicAddress)
    ApicSize    = _Length

    #
    # Patch APIC structure for different version
    #
    if    DescHeader.Header.Revision == 0x04:  # ACPI61, ACPI60
      pass
    elif  DescHeader.Header.Revision == 0x03:  # ACPI50, ACPI40
      import EfiPy.MdePkg.IndustryStandard.Acpi50 as Acpi50
      ApicDict[Acpi61.EFI_ACPI_6_1_GIC]   = Acpi50.EFI_ACPI_5_0_GIC_STRUCTURE
      ApicDict[Acpi61.EFI_ACPI_6_1_GICD]  = Acpi50.EFI_ACPI_5_0_GIC_DISTRIBUTOR_STRUCTURE
      pass
    elif  DescHeader.Header.Revision == 0x02:  # ACPI30
      import EfiPy.MdePkg.IndustryStandard.Acpi30 as Acpi30
      pass
    elif  DescHeader.Header.Revision == 0x01:  # ACPI20, ACPI10
      import EfiPy.MdePkg.IndustryStandard.Acpi20 as Acpi20
      ApicDict[Acpi61.EFI_ACPI_6_1_PLATFORM_INTERRUPT_SOURCES]  = Acpi20.EFI_ACPI_2_0_PLATFORM_INTERRUPT_SOURCES_STRUCTURE
      pass
    break;

if ApicAddress == 0:
  raise ImportError ('APIC Not found')

_MadtStart = ApicAddress + EfiPy.sizeof (Acpi61.EFI_ACPI_6_1_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER)
_MadtSop   = ApicAddress + ApicSize

class _APIC_TYPE (EFIPY_INDUSTRY_STRUCTURE):
  _fields_ = [
    ("Type",    EfiPy.UINT8),
    ("Length",  EfiPy.UINT8)
  ]

# class MULTIPLE_APIC_DESCRIPTION_TABLE (EFIPY_INDUSTRY_STRUCTURE):
#   _fields_ = [
#     ("Header",            EFI_ACPI_DESCRIPTION_HEADER),
#     ("LocalApicAddress",  EfiPy.UINT32),
#     ("Flags",             EfiPy.UINT32)
#   ]
_MadtField = [
  ("Header",            EFI_ACPI_DESCRIPTION_HEADER),
  ("LocalApicAddress",  EfiPy.UINT32),
  ("Flags",             EfiPy.UINT32)
]

_count = 0
while _MadtStart < _MadtSop:
  _at = _APIC_TYPE.from_address (_MadtStart)
  _apic_name = 'Type%02X_%02X' % (_at.Type, _count)
  _MadtField.append ((_apic_name, ApicDict[_at.Type]))
  _MadtStart += _at.Length
  _count += 1

class MULTIPLE_APIC_DESCRIPTION_TABLE (EFIPY_INDUSTRY_STRUCTURE):
  _fields_ = _MadtField

DescHeader = MULTIPLE_APIC_DESCRIPTION_TABLE.from_address (ApicAddress)

Address   = ApicAddress
Table     = DescHeader
Size      = ApicSize
Revision  = DescHeader.Header.Revision
