#!/usr/bin/python

#
# EfiPyVariableDump.py
#
# Copyright (C) 2015 - 2018 efipy.core@gmail.com All rights reserved.
#
# EfiPyVariableDump.py is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 2 of the License.
#
# EfiPy is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with EfiPy.  If not, see <http://www.gnu.org/licenses/>.
#

import EfiPy

from   EfiPyLib.EfiPyHexDump     import EfiPyHexDump

#
# EfiPy Library dump variable
#

def DmpVariable (name, guid):

  DataSize  = EfiPy.UINTN (0x00)
  Status    = EfiPy.gRT.GetVariable (
                          name,
                          EfiPy.byref (guid),
                          None,
                          EfiPy.byref (DataSize),
                          None
                          )

  if Status != EfiPy.EFI_BUFFER_TOO_SMALL:
    return

  Attributes  = EfiPy.UINT32(0x00)
  DataBuffer  =(EfiPy.CHAR8 * DataSize.value)("\00")
  Status      = EfiPy.gRT.GetVariable (
                            name,
                            EfiPy.byref (guid),
                            EfiPy.byref (Attributes),
                            EfiPy.byref (DataSize),
                            EfiPy.byref (DataBuffer)
                            )

  if not EfiPy.RETURN_ERROR (Status):

    StrVarAttr     = ""
    if (Attributes.value & EfiPy.EFI_VARIABLE_NON_VOLATILE) > 0:
      StrVarAttr = "NV"
    if (Attributes.value & EfiPy.EFI_VARIABLE_RUNTIME_ACCESS) > 0:
      if len(StrVarAttr) > 0:
        StrVarAttr = StrVarAttr + "+"
      StrVarAttr = StrVarAttr + "RS"
    if (Attributes.value & EfiPy.EFI_VARIABLE_BOOTSERVICE_ACCESS) > 0:
      if len(StrVarAttr) > 0:
        StrVarAttr = StrVarAttr + "+"
      StrVarAttr = StrVarAttr + "BS"

    print
    print "Variable - %s - '%s:%s' - DataSize = 0x%X" % (StrVarAttr, guid, name, DataSize.value)
    EfiPyHexDump (0, 0x0000, DataBuffer, True)

  else:
    print "Get Variable %s %s error" % (name, guid)

#
# Dump EFI variable working function
#
def DumpAllVariable ():

  import copy

  VariableList  = []

  VariableName  = u"\x00" * 100
  VariableSize  = EfiPy.UINTN (EfiPy.sizeof (EfiPy.CHAR16) * 100)
  VariableTsize = EfiPy.UINTN (EfiPy.sizeof (EfiPy.CHAR16) * 100)
  VariableGuid  = EfiPy.EFI_GUID()

  while True:

    Status = EfiPy.gRT.GetNextVariableName(
                         EfiPy.byref (VariableTsize),
                         EfiPy.PCHAR16 (VariableName),
                         EfiPy.byref (VariableGuid)
                         )

    if Status == EfiPy.EFI_BUFFER_TOO_SMALL:

      VariableName  = VariableName + u"\x00" * 100
      VariableSize.value += EfiPy.sizeof (EfiPy.CHAR16) * 100
      VariableTsize.value = VariableSize.value
      continue

    if Status == EfiPy.EFI_SUCCESS:

      VariableList.append([VariableName[:VariableName.index (u"\x00")], copy.copy(VariableGuid)])
      VariableTsize.value = VariableSize.value
      continue

    break

  for Var in VariableList:

    DmpVariable (Var[0], Var[1])

  return 0

if __name__ == '__main__':

  DumpAllVariable ()

  print "================================================================="
  name = u"BootOrder"
  guid = EFI_GUID (0x8BE4DF61, 0x93CA, 0x11D2, ( 0xAA, 0x0D, 0x00, 0xE0, 0x98, 0x03, 0x2B, 0x8C ))
  DmpVariable (name, guid)