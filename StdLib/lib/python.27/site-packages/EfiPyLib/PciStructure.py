#
# PciStructure.py
#
# Copyright (C) 2018 efipy.core@gmail.com All rights reserved.
#
# PciStructure.py is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 2 of the License.
#
# PciStructure.py is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with EfiPy.  If not, see <http://www.gnu.org/licenses/>.
#

#
# Index {'name': (Byte, bit)}
# 4 byte alignment
#

# PCI device Header structure
PciHeaderS = {
  'VendorId'      : ((0x00), ( 0, 15)),
  'DeviceId'      : ((0x00), (16, 31)),
  'Command'       : ((0x04), ( 0, 15)),
  'Status'        : ((0x04), (16, 31)),
  'RevisionID'    : ((0x08), ( 0,  7)),
  'ClassCode'     : ((0x08), ( 8, 31)),
  'CacheLineSize' : ((0x0C), ( 0,  7)),
  'LatencyTimer'  : ((0x0C), ( 8, 15)),
  'HeaderType'    : ((0x0C), (16, 23)),
  'DeviceType'    : ((0x0C), (16, 21)),
  'Multifunction' : ((0x0C), (23, 23)),
  'BIST'          : ((0x0C), (24, 31)),
  }

# PCI type 00 PCI device
PciDeviceS = {
  'BAR0'              : ((0x10), ( 0, 31)),
  'BAR1'              : ((0x14), ( 0, 31)),
  'BAR2'              : ((0x18), ( 0, 31)),
  'BAR3'              : ((0x1C), ( 0, 31)),
  'BAR4'              : ((0x20), ( 0, 31)),
  'BAR5'              : ((0x24), ( 0, 31)),
  'CISPtr'            : ((0x28), ( 0, 31)),
  'SubsystemVendorID' : ((0x2C), ( 0, 15)),
  'SubsystemID'       : ((0x2C), (16, 31)),
  'ExpansionRomBar'   : ((0x30), ( 0, 31)),
  'CapabilityPtr'     : ((0x34), ( 0,  7)),
  'InterruptLine'     : ((0x3C), ( 0,  7)),
  'InterruptPin'      : ((0x3C), ( 8, 15)),
  'MinGnt'            : ((0x3C), (16, 23)),
  'MaxLat'            : ((0x3C), (24, 31)),
  } # PciDeviceS

# PCI type 01 PCI-to-PCI Bridge
PciBridgeS = {
  'BAR0'                    : ((0x10), ( 0, 31)),
  'BAR1'                    : ((0x14), ( 0, 31)),
  'PrimaryBus'              : ((0x18), ( 0,  7)),
  'SecondaryBus'            : ((0x18), ( 8, 15)),
  'SubordinateBus'          : ((0x18), (16, 23)),
  'SecondaryLatencyTimer'   : ((0x18), (23, 31)),
  'IoBase'                  : ((0x1C), ( 0,  7)),
  'IoLimit'                 : ((0x1C), ( 8, 15)),
  'SecondaryStatus'         : ((0x1C), (16, 31)),
  'MemoryBase'              : ((0x20), ( 0, 15)),
  'MemoryLimit'             : ((0x20), (16, 31)),
  'PrefetchableMemoryBase'  : ((0x24), ( 0, 15)),
  'PrefetchableMemoryLimit' : ((0x24), (16, 31)),
  'PrefetchableBaseUpper32' : ((0x28), ( 0, 31)),
  'PrefetchableLimitUpper32': ((0x2C), ( 0, 31)),
  'IoBaseUpper16'           : ((0x30), ( 0, 15)),
  'IoLimitUpper16'          : ((0x30), (16, 31)),
  'CapabilityPtr'           : ((0x34), ( 0,  7)),
  'ExpansionRomBAR'         : ((0x38), ( 0, 31)),
  'InterruptLine'           : ((0x3C), ( 0,  7)),
  'InterruptPin'            : ((0x3C), ( 8, 15)),
  'BridgeControl'           : ((0x3C), (16, 31)),
  } # PciBridgeS

# PCI type 02 Cardbus bridge
PciCardBusS = {
  'CardBusSocketReg'        : ((0x10), ( 0, 31)),
  'Cap_Ptr'                 : ((0x14), ( 0,  7)),
  'SecondaryStatus'         : ((0x14), (16, 31)),
  'SecondaryBus'            : ((0x18), ( 8, 15)),
  'PciBusNumber'            : ((0x18), ( 0,  7)),
  'CardBusBusNumber'        : ((0x18), ( 8, 15)),
  'SubordinateBusNumber'    : ((0x18), (16, 23)),
  'CardBusLatencyTimer'     : ((0x18), (24, 31)),
  'MemoryBase0'             : ((0x1C), ( 0, 31)),
  'MemoryLimit0'            : ((0x20), ( 0, 31)),
  'MemoryBase1'             : ((0x24), ( 0, 31)),
  'MemoryLimit1'            : ((0x28), ( 0, 31)),
  'IoBase0'                 : ((0x2C), ( 0, 31)),
  'IoLimit0'                : ((0x30), ( 0, 31)),
  'IoBase1'                 : ((0x34), ( 0, 31)),
  'IoLimit1'                : ((0x38), ( 0, 31)),
  'InterruptLine'           : ((0x3C), ( 0,  7)),
  'InterruptPin'            : ((0x3C), ( 8, 15)),
  'BridgeControl'           : ((0x3C), (16, 31)),
  'SubsystemDeviceID'       : ((0x40), ( 0, 15)),
  'SubsystemVendorID'       : ((0x3C), (16, 31)),
  'LegacyModeBaseAddress'   : ((0x44), ( 0, 31)),
  }
