#
# Smbios.py
#
# Copyright (C) 2015 - 2017 efipy.core@gmail.com All rights reserved.
#
# Smbios.py is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 2 of the License.
#
# EfiPy is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with EfiPy.  If not, see <http://www.gnu.org/licenses/>.
#

from EfiPy import *

import EfiPy.MdePkg.IndustryStandard.SmBios as _sm
gEfiSmbiosProtocolGuid    = \
  EFI_GUID (0x3583ff6, 0xcb36, 0x4940, ( 0x94, 0x7e, 0xb9, 0xb3, 0x9f, 0x4a, 0xfa, 0xf7 ))

EFI_SMBIOS_TYPE_BIOS_INFORMATION                     = _sm.SMBIOS_TYPE_BIOS_INFORMATION
EFI_SMBIOS_TYPE_SYSTEM_INFORMATION                   = _sm.SMBIOS_TYPE_SYSTEM_INFORMATION
EFI_SMBIOS_TYPE_BASEBOARD_INFORMATION                = _sm.SMBIOS_TYPE_BASEBOARD_INFORMATION
EFI_SMBIOS_TYPE_SYSTEM_ENCLOSURE                     = _sm.SMBIOS_TYPE_SYSTEM_ENCLOSURE
EFI_SMBIOS_TYPE_PROCESSOR_INFORMATION                = _sm.SMBIOS_TYPE_PROCESSOR_INFORMATION
EFI_SMBIOS_TYPE_MEMORY_CONTROLLER_INFORMATION        = _sm.SMBIOS_TYPE_MEMORY_CONTROLLER_INFORMATION
EFI_SMBIOS_TYPE_MEMORY_MODULE_INFORMATON             = _sm.SMBIOS_TYPE_MEMORY_MODULE_INFORMATON
EFI_SMBIOS_TYPE_CACHE_INFORMATION                    = _sm.SMBIOS_TYPE_CACHE_INFORMATION
EFI_SMBIOS_TYPE_PORT_CONNECTOR_INFORMATION           = _sm.SMBIOS_TYPE_PORT_CONNECTOR_INFORMATION
EFI_SMBIOS_TYPE_SYSTEM_SLOTS                         = _sm.SMBIOS_TYPE_SYSTEM_SLOTS
EFI_SMBIOS_TYPE_ONBOARD_DEVICE_INFORMATION           = _sm.SMBIOS_TYPE_ONBOARD_DEVICE_INFORMATION
EFI_SMBIOS_TYPE_OEM_STRINGS                          = _sm.SMBIOS_TYPE_OEM_STRINGS
EFI_SMBIOS_TYPE_SYSTEM_CONFIGURATION_OPTIONS         = _sm.SMBIOS_TYPE_SYSTEM_CONFIGURATION_OPTIONS
EFI_SMBIOS_TYPE_BIOS_LANGUAGE_INFORMATION            = _sm.SMBIOS_TYPE_BIOS_LANGUAGE_INFORMATION
EFI_SMBIOS_TYPE_GROUP_ASSOCIATIONS                   = _sm.SMBIOS_TYPE_GROUP_ASSOCIATIONS
EFI_SMBIOS_TYPE_SYSTEM_EVENT_LOG                     = _sm.SMBIOS_TYPE_SYSTEM_EVENT_LOG
EFI_SMBIOS_TYPE_PHYSICAL_MEMORY_ARRAY                = _sm.SMBIOS_TYPE_PHYSICAL_MEMORY_ARRAY
EFI_SMBIOS_TYPE_MEMORY_DEVICE                        = _sm.SMBIOS_TYPE_MEMORY_DEVICE
EFI_SMBIOS_TYPE_32BIT_MEMORY_ERROR_INFORMATION       = _sm.SMBIOS_TYPE_32BIT_MEMORY_ERROR_INFORMATION
EFI_SMBIOS_TYPE_MEMORY_ARRAY_MAPPED_ADDRESS          = _sm.SMBIOS_TYPE_MEMORY_ARRAY_MAPPED_ADDRESS
EFI_SMBIOS_TYPE_MEMORY_DEVICE_MAPPED_ADDRESS         = _sm.SMBIOS_TYPE_MEMORY_DEVICE_MAPPED_ADDRESS
EFI_SMBIOS_TYPE_BUILT_IN_POINTING_DEVICE             = _sm.SMBIOS_TYPE_BUILT_IN_POINTING_DEVICE
EFI_SMBIOS_TYPE_PORTABLE_BATTERY                     = _sm.SMBIOS_TYPE_PORTABLE_BATTERY
EFI_SMBIOS_TYPE_SYSTEM_RESET                         = _sm.SMBIOS_TYPE_SYSTEM_RESET
EFI_SMBIOS_TYPE_HARDWARE_SECURITY                    = _sm.SMBIOS_TYPE_HARDWARE_SECURITY
EFI_SMBIOS_TYPE_SYSTEM_POWER_CONTROLS                = _sm.SMBIOS_TYPE_SYSTEM_POWER_CONTROLS
EFI_SMBIOS_TYPE_VOLTAGE_PROBE                        = _sm.SMBIOS_TYPE_VOLTAGE_PROBE
EFI_SMBIOS_TYPE_COOLING_DEVICE                       = _sm.SMBIOS_TYPE_COOLING_DEVICE
EFI_SMBIOS_TYPE_TEMPERATURE_PROBE                    = _sm.SMBIOS_TYPE_TEMPERATURE_PROBE
EFI_SMBIOS_TYPE_ELECTRICAL_CURRENT_PROBE             = _sm.SMBIOS_TYPE_ELECTRICAL_CURRENT_PROBE
EFI_SMBIOS_TYPE_OUT_OF_BAND_REMOTE_ACCESS            = _sm.SMBIOS_TYPE_OUT_OF_BAND_REMOTE_ACCESS
EFI_SMBIOS_TYPE_BOOT_INTEGRITY_SERVICE               = _sm.SMBIOS_TYPE_BOOT_INTEGRITY_SERVICE
EFI_SMBIOS_TYPE_SYSTEM_BOOT_INFORMATION              = _sm.SMBIOS_TYPE_SYSTEM_BOOT_INFORMATION
EFI_SMBIOS_TYPE_64BIT_MEMORY_ERROR_INFORMATION       = _sm.SMBIOS_TYPE_64BIT_MEMORY_ERROR_INFORMATION
EFI_SMBIOS_TYPE_MANAGEMENT_DEVICE                    = _sm.SMBIOS_TYPE_MANAGEMENT_DEVICE
EFI_SMBIOS_TYPE_MANAGEMENT_DEVICE_COMPONENT          = _sm.SMBIOS_TYPE_MANAGEMENT_DEVICE_COMPONENT
EFI_SMBIOS_TYPE_MANAGEMENT_DEVICE_THRESHOLD_DATA     = _sm.SMBIOS_TYPE_MANAGEMENT_DEVICE_THRESHOLD_DATA
EFI_SMBIOS_TYPE_MEMORY_CHANNEL                       = _sm.SMBIOS_TYPE_MEMORY_CHANNEL
EFI_SMBIOS_TYPE_IPMI_DEVICE_INFORMATION              = _sm.SMBIOS_TYPE_IPMI_DEVICE_INFORMATION
EFI_SMBIOS_TYPE_SYSTEM_POWER_SUPPLY                  = _sm.SMBIOS_TYPE_SYSTEM_POWER_SUPPLY
EFI_SMBIOS_TYPE_ADDITIONAL_INFORMATION               = _sm.SMBIOS_TYPE_ADDITIONAL_INFORMATION
EFI_SMBIOS_TYPE_ONBOARD_DEVICES_EXTENDED_INFORMATION = _sm.SMBIOS_TYPE_ONBOARD_DEVICES_EXTENDED_INFORMATION
EFI_SMBIOS_TYPE_MANAGEMENT_CONTROLLER_HOST_INTERFACE = _sm.SMBIOS_TYPE_MANAGEMENT_CONTROLLER_HOST_INTERFACE
EFI_SMBIOS_TYPE_INACTIVE                             = _sm.SMBIOS_TYPE_INACTIVE
EFI_SMBIOS_TYPE_END_OF_TABLE                         = _sm.SMBIOS_TYPE_END_OF_TABLE
EFI_SMBIOS_OEM_BEGIN                                 = _sm.SMBIOS_OEM_BEGIN
EFI_SMBIOS_OEM_END                                   = _sm.SMBIOS_OEM_END

EFI_SMBIOS_STRING       = _sm.SMBIOS_TABLE_STRING
EFI_SMBIOS_TYPE         = _sm.SMBIOS_TYPE

EFI_SMBIOS_HANDLE       = _sm.SMBIOS_HANDLE
EFI_SMBIOS_TABLE_HEADER = _sm.SMBIOS_STRUCTURE

class EFI_SMBIOS_PROTOCOL (Structure):
  pass

EFI_SMBIOS_ADD = CFUNCTYPE (
  EFI_STATUS,
  POINTER(EFI_SMBIOS_PROTOCOL),         # IN      *This
  EFI_HANDLE,                           # IN      ProducerHandle OPTIONAL,
  POINTER(EFI_SMBIOS_HANDLE),           # IN OUT  *SmbiosHandle,
  POINTER(EFI_SMBIOS_TABLE_HEADER)      # IN      *Record
  )

EFI_SMBIOS_UPDATE_STRING = CFUNCTYPE (
  EFI_STATUS,
  POINTER(EFI_SMBIOS_PROTOCOL),         # IN *This
  POINTER(EFI_SMBIOS_HANDLE),           # IN *SmbiosHandle,
  POINTER(UINTN),                       # IN *StringNumber,
  PCHAR8                                # IN *String
  )

EFI_SMBIOS_REMOVE = CFUNCTYPE (
  EFI_STATUS,
  POINTER(EFI_SMBIOS_PROTOCOL),         # IN *This
  EFI_SMBIOS_HANDLE                     # IN SmbiosHandle
  )

EFI_SMBIOS_GET_NEXT = CFUNCTYPE (
  EFI_STATUS,
  POINTER(EFI_SMBIOS_PROTOCOL),               # IN  *This
  POINTER(EFI_SMBIOS_HANDLE),                 # IN  *SmbiosHandle,
  POINTER(EFI_SMBIOS_TYPE),                   # IN  *Type              OPTIONAL,
  POINTER(POINTER(EFI_SMBIOS_TABLE_HEADER)),  # OUT **Record,
  POINTER(EFI_HANDLE)                         # OUT *ProducerHandle    OPTIONAL
  )

EFI_SMBIOS_PROTOCOL._fields_ = [
    ("Add",           EFI_SMBIOS_ADD),
    ("UpdateString",  EFI_SMBIOS_UPDATE_STRING),
    ("Remove",        EFI_SMBIOS_REMOVE),
    ("GetNext",       EFI_SMBIOS_GET_NEXT),
    ("MajorVersion",  UINT8),
    ("MinorVersion",  UINT8)
  ]

