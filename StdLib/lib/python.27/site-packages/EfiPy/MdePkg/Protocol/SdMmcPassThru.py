# SdMmcPassThru.py
#
# Copyright (C) 2015 efipy.core@gmail.com All rights reserved.
#
# SdMmcPassThru.py is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 2 of the License.
#
# EfiPy is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with EfiPy.  If not, see <http://www.gnu.org/licenses/>.
#

from EfiPy import *

class EFI_SD_MMC_PASS_THRU_PROTOCOL (Structure):
  pass

SdMmcCommandTypeBc      = 0
SdMmcCommandTypeBcr     = 1
SdMmcCommandTypeAc      = 2
SdMmcCommandTypeAdtc    = 3
EFI_SD_MMC_COMMAND_TYPE = UINTN

SdMmcResponseTypeR1       = 0
SdMmcResponseTypeR1b      = 1
SdMmcResponseTypeR2       = 2
SdMmcResponseTypeR3       = 3
SdMmcResponseTypeR4       = 4
SdMmcResponseTypeR5       = 5
SdMmcResponseTypeR5b      = 6
SdMmcResponseTypeR6       = 7
SdMmcResponseTypeR7       = 8
EFI_SD_MMC_RESPONSE_TYPE  = UINTN

class EFI_SD_MMC_COMMAND_BLOCK (Structure):
  _fields_ = [
    ("CommandIndex",    UINT16),
    ("CommandArgument", UINT32),
    ("CommandType",     UINT32),
    ("ResponseType",    UINT32),
    ]

class EFI_SD_MMC_STATUS_BLOCK (Structure):
  _fields_ = [
    ("Resp0", UINT32),
    ("Resp1", UINT32),
    ("Resp2", UINT32),
    ("Resp3", UINT32),
    ]

class EFI_SD_MMC_PASS_THRU_COMMAND_PACKET (Structure):
  _fields_ = [
    ("Timeout",           UINT64),
    ("SdMmcCmdBlk",       POINTER(EFI_SD_MMC_COMMAND_BLOCK)),
    ("SdMmcStatusBlk",    POINTER(EFI_SD_MMC_STATUS_BLOCK)),
    ("InDataBuffer",      PVOID),
    ("OutDataBuffer",     PVOID),
    ("InTransferLength",  UINT32),
    ("OutTransferLength", UINT32),
    ("TransactionStatus", EFI_STATUS),
    ]

EFI_SD_MMC_PASS_THRU_PASSTHRU = CFUNCTYPE (
  EFI_STATUS,
  POINTER(EFI_SD_MMC_PASS_THRU_PROTOCOL),       #   IN     *This
  UINT8,                                        #   IN     Slot,
  POINTER(EFI_SD_MMC_PASS_THRU_COMMAND_PACKET), #   IN OUT *Packet,
  EFI_EVENT                                     #   IN     Event    OPTIONAL
  )

EFI_SD_MMC_PASS_THRU_GET_NEXT_SLOT = CFUNCTYPE (
  EFI_STATUS,
  POINTER(EFI_SD_MMC_PASS_THRU_PROTOCOL),       #   IN     *This
  POINTER(UINT8),                               #   IN OUT Slot,
  )

EFI_SD_MMC_PASS_THRU_BUILD_DEVICE_PATH = CFUNCTYPE (
  EFI_STATUS,
  POINTER(EFI_SD_MMC_PASS_THRU_PROTOCOL),     #   IN     *This
  UINT8,                                      #   IN     Slot,
  POINTER(POINTER(EFI_DEVICE_PATH_PROTOCOL))  #   IN OUT **DevicePath
  )

EFI_SD_MMC_PASS_THRU_GET_SLOT_NUMBER = CFUNCTYPE (
  EFI_STATUS,
  POINTER(EFI_SD_MMC_PASS_THRU_PROTOCOL), #   IN     *This
  POINTER(EFI_DEVICE_PATH_PROTOCOL),      #   IN     **DevicePath,
  POINTER(UINT8)                          #      OUT *Slot
  )

EFI_SD_MMC_PASS_THRU_RESET_DEVICE = CFUNCTYPE (
  EFI_STATUS,
  POINTER(EFI_SD_MMC_PASS_THRU_PROTOCOL), #   IN     *This
  UINT8                                   #   IN     Slot
  )

EFI_SD_MMC_PASS_THRU_PROTOCOL._fields_ = [
  ("IoAlign",         UINT32),
  ("PassThru",        EFI_SD_MMC_PASS_THRU_PASSTHRU),
  ("GetNextSlot",     EFI_SD_MMC_PASS_THRU_GET_NEXT_SLOT),
  ("BuildDevicePath", EFI_SD_MMC_PASS_THRU_BUILD_DEVICE_PATH),
  ("GetSlotNumber",   EFI_SD_MMC_PASS_THRU_GET_SLOT_NUMBER),
  ("ResetDevice",     EFI_SD_MMC_PASS_THRU_RESET_DEVICE),
  ]

gEfiSdMmcPassThruProtocolGuid = EFI_GUID(0x716ef0d9, 0xff83, 0x4f69, (0x81, 0xe9, 0x51, 0x8b, 0xd3, 0x9a, 0x8e, 0x70))
