# Nvme.py
#
# Copyright (C) 2017 efipy.core@gmail.com All rights reserved.
#
# Nvme.py is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 2 of the License.
#
# EfiPy is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with EfiPy.  If not, see <http://www.gnu.org/licenses/>.
#

from EfiPy  import *

NVME_CAP_OFFSET          = 0x0000
NVME_VER_OFFSET          = 0x0008
NVME_INTMS_OFFSET        = 0x000c
NVME_INTMC_OFFSET        = 0x0010
NVME_CC_OFFSET           = 0x0014
NVME_CSTS_OFFSET         = 0x001c
NVME_NSSR_OFFSET         = 0x0020
NVME_AQA_OFFSET          = 0x0024
NVME_ASQ_OFFSET          = 0x0028
NVME_ACQ_OFFSET          = 0x0030
NVME_SQ0_OFFSET          = 0x1000
NVME_CQ0_OFFSET          = 0x1004

def NVME_SQTDBL_OFFSET(QID, DSTRD):
  return 0x1000 + ((2 * (QID)) * (4 << (DSTRD)))

def NVME_CQHDBL_OFFSET(QID, DSTRD):
  return 0x1000 + (((2 * (QID)) + 1) * (4 << (DSTRD)))

class NVME_CAP (Structure):
  _pack_   = 1
  _fields_ = [
  ("Mqes",    UINT16),
  ("Cqr",     UINT8 , 1),
  ("Ams",     UINT8 , 2),
  ("Rsvd1",   UINT8 , 5),
  ("To",      UINT8),
  ("Dstrd",   UINT16, 4),
  ("Nssrs",   UINT16, 1),
  ("Css",     UINT16, 4),
  ("Rsvd3",   UINT16, 7),
  ("Mpsmin",  UINT8 , 4),
  ("Mpsmax",  UINT8 , 4),
  ("Rsvd4",   UINT8),
  ]

class NVME_VER (Structure):
  _pack_   = 1
  _fields_ = [
  ("Mnr", UINT16),
  ("Mjr", UINT16),
  ]

class NVME_CC (Structure):
  _pack_   = 1
  _fields_ = [
  ("En",      UINT16, 1),
  ("Rsvd1",   UINT16, 3),
  ("Css",     UINT16, 3),
  ("Mps",     UINT16, 4),
  ("Ams",     UINT16, 3),
  ("Shn",     UINT16, 2),
  ("Iosqes",  UINT8 , 4),
  ("Iocqes",  UINT8 , 4),
  ("Rsvd2",   UINT8),
  ]

class NVME_CSTS (Structure):
  _pack_   = 1
  _fields_ = [
  ("Rdy",   UINT32, 1),
  ("Cfs",   UINT32, 1),
  ("Shst",  UINT32, 2),
  ("Nssro", UINT32, 1),
  ("Rsvd1", UINT32, 27),
  ]

class NVME_AQA (Structure):
  _pack_   = 1
  _fields_ = [
  ("Asqs",  UINT16, 12),
  ("Rsvd1", UINT16, 4),
  ("Acqs",  UINT16, 12),
  ("Rsvd2", UINT16, 4),
  ]

NVME_ASQ      = UINT64
NVME_ACQ      = UINT64
class NVME_SQTDBL (Structure):
  _pack_   = 1
  _fields_ = [
  ("Sqt",   UINT16),
  ("Rsvd1", UINT16),
  ]

class NVME_CQHDBL (Structure):
  _pack_   = 1
  _fields_ = [
  ("Cqh",   UINT16),
  ("Rsvd1", UINT16),
  ]

class NVME_READ (Structure):
  _pack_   = 1
  _fields_ = [
  ("Slba",    UINT64),
  ("Nlb",     UINT16),
  ("Rsvd1",   UINT16, 10),
  ("Prinfo",  UINT16, 4),
  ("Fua",     UINT16, 1),
  ("Lr",      UINT16, 1),
  ("Af",      UINT32, 4),
  ("Al",      UINT32, 2),
  ("Sr",      UINT32, 1),
  ("In",      UINT32, 1),
  ("Rsvd2",   UINT32, 24),
  ("Eilbrt",  UINT32),
  ("Elbat",   UINT16),
  ("Elbatm",  UINT16),
  ]

class NVME_WRITE (Structure):
  _pack_   = 1
  _fields_ = [
  ("Slba",    UINT64),
  ("Nlb",     UINT16),
  ("Rsvd1",   UINT16, 10),
  ("Prinfo",  UINT16, 4),
  ("Fua",     UINT16, 1),
  ("Lr",      UINT16, 1),
  ("Af",      UINT32, 4),
  ("Al",      UINT32, 2),
  ("Sr",      UINT32, 1),
  ("In",      UINT32, 1),
  ("Rsvd2",   UINT32, 24),
  ("Ilbrt",   UINT32),
  ("Lbat",    UINT16),
  ("Lbatm",   UINT16),
  ]

class NVME_FLUSH (Structure):
  _pack_   = 1
  _fields_ = [
  ("Flush",    UINT32),
  ]

class NVME_WRITE_UNCORRECTABLE (Structure):
  _pack_   = 1
  _fields_ = [
  ("Slba",  UINT64),
  ("Nlb",   UINT32, 16),
  ("Rsvd1", UINT32, 16),
  ]

class NVME_WRITE_ZEROES (Structure):
  _pack_   = 1
  _fields_ = [
  ("Slba",    UINT64),
  ("Nlb",     UINT16),
  ("Rsvd1",   UINT16, 10),
  ("Prinfo",  UINT16, 4),
  ("Fua",     UINT16, 1),
  ("Lr",      UINT16, 1),
  ("Rsvd2",   UINT32),
  ("Ilbrt",   UINT32),
  ("Lbat",    UINT16),
  ("Lbatm",   UINT16),
  ]

class NVME_COMPARE (Structure):
  _pack_   = 1
  _fields_ = [
  ("Slba",    UINT64),
  ("Nlb",     UINT16),
  ("Rsvd1",   UINT16, 10),
  ("Prinfo",  UINT16, 4),
  ("Fua",     UINT16, 1),
  ("Lr",      UINT16, 1),
  ("Rsvd2",   UINT32),
  ("Eilbrt",  UINT32),
  ("Elbat",   UINT16),
  ("Elbatm",  UINT16),
  ]

class NVME_CMD (Structure):
  _pack_   = 1
  _fields_ = [
  ("Read",                NVME_READ),
  ("Write",               NVME_WRITE),
  ("Flush",               NVME_FLUSH),
  ("WriteUncorrectable",  NVME_WRITE_UNCORRECTABLE),
  ("WriteZeros",          NVME_WRITE_ZEROES),
  ("Compare",             NVME_COMPARE),
  ]

class NVME_PSDESCRIPTOR (Structure):
  _pack_   = 1
  _fields_ = [
  ("Mp",    UINT16),
  ("Rsvd1", UINT8),
  ("Mps",   UINT8 , 1),
  ("Nops",  UINT8 , 1),
  ("Rsvd2", UINT8 , 6),
  ("Enlat", UINT32),
  ("Exlat", UINT32),
  ("Rrt",   UINT8 , 5),
  ("Rsvd3", UINT8 , 3),
  ("Rrl",   UINT8 , 5),
  ("Rsvd4", UINT8 , 3),
  ("Rwt",   UINT8 , 5),
  ("Rsvd5", UINT8 , 3),
  ("Rwl",   UINT8 , 5),
  ("Rsvd6", UINT8 , 3),
  ("Rsvd7", UINT8 * 16),
  ]

class NVME_ADMIN_CONTROLLER_DATA (Structure):
  _pack_   = 1
  _fields_ = [
  ("Vid",           UINT16),
  ("Ssvid",         UINT16),
  ("Sn",            UINT8 * 20),
  ("Mn",            UINT8 * 40),
  ("Fr",            UINT8 * 8),
  ("Rab",           UINT8 ),
  ("Ieee_oui",      UINT8 * 3),
  ("Cmic",          UINT8 ),
  ("Mdts",          UINT8 ),
  ("Cntlid",        UINT8 * 2),
  ("Rsvd1",         UINT8 * 176),
  ("Oacs",          UINT16),
  ("Acl",           UINT8 ),
  ("Aerl",          UINT8 ),
  ("Frmw",          UINT8 ),
  ("Lpa",           UINT8 ),
  ("Elpe",          UINT8 ),
  ("Npss",          UINT8 ),
  ("Avscc",         UINT8 ),
  ("Apsta",         UINT8 ),
  ("Rsvd2",         UINT8 * 246),
  ("Sqes",          UINT8 ),
  ("Cqes",          UINT8 ),
  ("Rsvd3",         UINT16),
  ("Nn",            UINT32),
  ("Oncs",          UINT16),
  ("Fuses",         UINT16),
  ("Fna",           UINT8 ),
  ("Vwc",           UINT8 ),
  ("Awun",          UINT16),
  ("Awupf",         UINT16),
  ("Nvscc",         UINT8 ),
  ("Rsvd4",         UINT8 ),
  ("Acwu",          UINT16),
  ("Rsvd5",         UINT16),
  ("Sgls",          UINT32),
  ("Rsvd6",         UINT8 * 164),
  ("Rsvd7",         UINT8 *1344),
  ("PsDescriptor",  NVME_PSDESCRIPTOR * 32),
  ("VendorData",    UINT8 * 1024),
  ]

LBAF_RP_BEST      = 0b00
LBAF_RP_BETTER    = 0b01
LBAF_RP_GOOD      = 0b10
LBAF_RP_DEGRADED  = 0b11
class NVME_LBAFORMAT (Structure):
  _pack_   = 1
  _fields_ = [
  ("Ms",    UINT16),
  ("Lbads", UINT8),
  ("Rp",    UINT8, 2),
  ("Rsvd1", UINT8, 6),
  ]

class NVME_ADMIN_NAMESPACE_DATA (Structure):
  _pack_   = 1
  _fields_ = [
  ("Nsze",        UINT64),
  ("Ncap",        UINT64),
  ("Nuse",        UINT64),
  ("Nsfeat",      UINT8),
  ("Nlbaf",       UINT8),
  ("Flbas",       UINT8),
  ("Mc",          UINT8),
  ("Dpc",         UINT8),
  ("Dps",         UINT8),
  ("Nmic",        UINT8),
  ("Rescap",      UINT8),
  ("Rsvd1",       UINT8 * 88),
  ("Eui64",       UINT64),
  ("LbaFormat",   NVME_LBAFORMAT * 16),
  ("Rsvd2",       UINT8 * 192),
  ("VendorData",  UINT8 * 3712),
  ]

class NVME_ADMIN_IDENTIFY (Structure):
  _pack_   = 1
  _fields_ = [
  ("Cns",   UINT32, 2),
  ("Rsvd1", UINT32, 30),
  ]

class NVME_ADMIN_CRIOCQ (Structure):
  _pack_   = 1
  _fields_ = [
  ("Qid",     UINT32, 16),
  ("Qsize",   UINT32, 16),
  ("Pc",      UINT32, 1),
  ("Ien",     UINT32, 1),
  ("Rsvd1",   UINT32, 14),
  ("Iv",      UINT32, 16),
  ]

class NVME_ADMIN_CRIOSQ (Structure):
  _pack_   = 1
  _fields_ = [
  ("Qid",     UINT32, 16),
  ("Qsize",   UINT32, 16),
  ("Pc",      UINT32, 1),
  ("Qprio",   UINT32, 2),
  ("Rsvd1",   UINT32, 13),
  ("Cqid",    UINT32, 16),
  ]

class NVME_ADMIN_DEIOCQ (Structure):
  _pack_   = 1
  _fields_ = [
  ("Qid",     UINT16),
  ("Rsvd1",   UINT16),
  ]

class NVME_ADMIN_DEIOSQ (Structure):
  _pack_   = 1
  _fields_ = [
  ("Qid",     UINT16),
  ("Rsvd1",   UINT16),
  ]

class NVME_ADMIN_ABORT (Structure):
  _pack_   = 1
  _fields_ = [
  ("Sqid",  UINT32, 16),
  ("Cid",   UINT32, 16),
  ]

class NVME_ADMIN_FIRMWARE_ACTIVATE (Structure):
  _pack_   = 1
  _fields_ = [
  ("Fs",    UINT32, 3),
  ("Aa",    UINT32, 2),
  ("Rsvd1", UINT32, 27),
  ]

class NVME_ADMIN_FIRMWARE_IMAGE_DOWNLOAD (Structure):
  _pack_   = 1
  _fields_ = [
  ("Numd",    UINT32),
  ("Ofst",    UINT32),
  ]

class NVME_ADMIN_GET_FEATURES (Structure):
  _pack_   = 1
  _fields_ = [
  ("Fid",   UINT32, 8),
  ("Sel",   UINT32, 3),
  ("Rsvd1", UINT32, 21),
  ]

LID_ERROR_INFO   = 0x1
LID_SMART_INFO   = 0x2
LID_FW_SLOT_INFO = 0x3

class NVME_ADMIN_GET_LOG_PAGE (Structure):
  _pack_   = 1
  _fields_ = [
  ("Lid",   UINT32, 8),
  ("Rsvd1", UINT32, 8),
  ("Numd",  UINT32, 12),
  ("Rsvd2", UINT32, 4),
  ]

class NVME_ADMIN_SET_FEATURES (Structure):
  _pack_   = 1
  _fields_ = [
  ("Fid",     UINT32, 8),
  ("Rsvd1",   UINT32, 23),
  ("Sv",      UINT32, 1),
  ]

class NVME_ADMIN_FORMAT_NVM (Structure):
  _pack_   = 1
  _fields_ = [
  ("Lbaf",    UINT32, 4),
  ("Ms",      UINT32, 1),
  ("Pi",      UINT32, 3),
  ("Pil",     UINT32, 1),
  ("Ses",     UINT32, 3),
  ("Rsvd1",   UINT32, 20),
  ]

class NVME_ADMIN_SECURITY_RECEIVE (Structure):
  _pack_   = 1
  _fields_ = [
  ("Rsvd1", UINT32, 8),
  ("Spsp",  UINT32, 16),
  ("Secp",  UINT32, 8),
  ("Al",    UINT32),
  ]

class NVME_ADMIN_SECURITY_SEND (Structure):
  _pack_   = 1
  _fields_ = [
  ("Rsvd1", UINT32, 8),
  ("Spsp",  UINT32, 16),
  ("Secp",  UINT32, 8),
  ("Tl",    UINT32),
  ]

class NVME_ADMIN_CMD (Union):
  _pack_   = 1
  _fields_ = [
  ("Identify",              NVME_ADMIN_IDENTIFY),
  ("CrIoCq",                NVME_ADMIN_CRIOCQ),
  ("CrIoSq",                NVME_ADMIN_CRIOSQ),
  ("DeIoCq",                NVME_ADMIN_DEIOCQ),
  ("DeIoSq",                NVME_ADMIN_DEIOSQ),
  ("Abort",                 NVME_ADMIN_ABORT),
  ("Activate",              NVME_ADMIN_FIRMWARE_ACTIVATE),
  ("FirmwareImageDownload", NVME_ADMIN_FIRMWARE_IMAGE_DOWNLOAD),
  ("GetFeatures",           NVME_ADMIN_GET_FEATURES),
  ("GetLogPage",            NVME_ADMIN_GET_LOG_PAGE),
  ("SetFeatures",           NVME_ADMIN_SET_FEATURES),
  ("FormatNvm",             NVME_ADMIN_FORMAT_NVM),
  ("SecurityReceive",       NVME_ADMIN_SECURITY_RECEIVE),
  ("SecuritySend",          NVME_ADMIN_SECURITY_SEND),
  ]

class NVME_RAW (Structure):
  _pack_   = 1
  _fields_ = [
  ("Cdw10", UINT32),
  ("Cdw11", UINT32),
  ("Cdw12", UINT32),
  ("Cdw13", UINT32),
  ("Cdw14", UINT32),
  ("Cdw15", UINT32),
  ]

class NVME_PAYLOAD (Union):
  _pack_   = 1
  _fields_ = [
  ("Admin", NVME_ADMIN_CMD),
  ("Nvm",   NVME_CMD),
  ("Raw",   NVME_RAW),
  ]

class NVME_SQ (Structure):
  _pack_   = 1
  _fields_ = [
  ("Opc",     UINT8),
  ("Fuse",    UINT8, 2),
  ("Rsvd1",   UINT8, 5),
  ("Psdt",    UINT8, 1),
  ("Cid",     UINT16),
  ("Nsid",    UINT32),
  ("Rsvd2",   UINT64),
  ("Mptr",    UINT64),
  ("Prp",     UINT64 * 2),
  ("Payload", NVME_PAYLOAD),
  ]

class NVME_CQ (Structure):
  _pack_   = 1
  _fields_ = [
  ("Dword0",  UINT32),
  ("Rsvd1",   UINT32),
  ("Sqhd",    UINT16),
  ("Sqid",    UINT16),
  ("Cid",     UINT16),
  ("Pt",      UINT16, 1),
  ("Sc",      UINT16, 8),
  ("Sct",     UINT16, 3),
  ("Rsvd2",   UINT16, 2),
  ("Mo",      UINT16, 1),
  ("Dnr",     UINT16, 1),
  ]

NVME_ADMIN_DEIOSQ_CMD                = 0x00
NVME_ADMIN_CRIOSQ_CMD                = 0x01
NVME_ADMIN_GET_LOG_PAGE_CMD          = 0x02
NVME_ADMIN_DEIOCQ_CMD                = 0x04
NVME_ADMIN_CRIOCQ_CMD                = 0x05
NVME_ADMIN_IDENTIFY_CMD              = 0x06
NVME_ADMIN_ABORT_CMD                 = 0x08
NVME_ADMIN_SET_FEATURES_CMD          = 0x09
NVME_ADMIN_GET_FEATURES_CMD          = 0x0A
NVME_ADMIN_ASYNC_EVENT_REQUEST_CMD   = 0x0C
NVME_ADMIN_NAMESACE_MANAGEMENT_CMD   = 0x0D
NVME_ADMIN_FW_COMMIT_CMD             = 0x10
NVME_ADMIN_FW_IAMGE_DOWNLOAD_CMD     = 0x11
NVME_ADMIN_NAMESACE_ATTACHMENT_CMD   = 0x15
NVME_ADMIN_FORMAT_NVM_CMD            = 0x80
NVME_ADMIN_SECURITY_SEND_CMD         = 0x81
NVME_ADMIN_SECURITY_RECEIVE_CMD      = 0x82

NVME_IO_FLUSH_OPC                    = 0
NVME_IO_WRITE_OPC                    = 1
NVME_IO_READ_OPC                     = 2

DeleteIOSubmissionQueueOpcode = NVME_ADMIN_DEIOSQ_CMD
CreateIOSubmissionQueueOpcode = NVME_ADMIN_CRIOSQ_CMD
GetLogPageOpcode = NVME_ADMIN_GET_LOG_PAGE_CMD
DeleteIOCompletionQueueOpcode = NVME_ADMIN_DEIOCQ_CMD
CreateIOCompletionQueueOpcode = NVME_ADMIN_CRIOCQ_CMD
IdentifyOpcode = NVME_ADMIN_IDENTIFY_CMD
AbortOpcode = NVME_ADMIN_ABORT_CMD
SetFeaturesOpcode = NVME_ADMIN_SET_FEATURES_CMD
GetFeaturesOpcode = NVME_ADMIN_GET_FEATURES_CMD
AsyncEventRequestOpcode = NVME_ADMIN_ASYNC_EVENT_REQUEST_CMD
NamespaceManagementOpcode = NVME_ADMIN_NAMESACE_MANAGEMENT_CMD
FirmwareCommitOpcode = NVME_ADMIN_FW_COMMIT_CMD
FirmwareImageDownloadOpcode = NVME_ADMIN_FW_IAMGE_DOWNLOAD_CMD
NamespaceAttachmentOpcode = NVME_ADMIN_NAMESACE_ATTACHMENT_CMD
FormatNvmOpcode = NVME_ADMIN_FORMAT_NVM_CMD
SecuritySendOpcode = NVME_ADMIN_SECURITY_SEND_CMD
SecurityReceiveOpcode = NVME_ADMIN_SECURITY_RECEIVE_CMD
NVME_ADMIN_COMMAND_OPCODE = UINTN

IdentifyNamespaceCns = 0x0
IdentifyControllerCns = 0x1
IdentifyActiveNsListCns = 0x2
NVME_ADMIN_IDENTIFY_CNS = UINTN

ActivateActionReplace = 0x0
ActivateActionReplaceActivate = 0x1
ActivateActionActivate = 0x2
NVME_FW_ACTIVATE_ACTION = UINTN

FirmwareSlotCtrlChooses = 0x0
FirmwareSlot1 = 0x1
FirmwareSlot2 = 0x2
FirmwareSlot3 = 0x3
FirmwareSlot4 = 0x4
FirmwareSlot5 = 0x5
FirmwareSlot6 = 0x6
FirmwareSlot7 = 0x7
NVME_FW_ACTIVATE_SLOT = UINTN

ErrorInfoLogID = LID_ERROR_INFO
SmartHealthInfoLogID = LID_SMART_INFO
FirmwareSlotInfoLogID = LID_FW_SLOT_INFO
NVME_LOG_ID = UINTN

class NVME_ACTIVE_FW_INFO (Structure):
  _pack_   = 1
  _fields_ = [
  ("ActivelyRunningFwSlot",  UINT8, 3),
  ("Reserve1",               UINT8, 1),
  ("NextActiveFwSlot",       UINT8, 3),
  ("Reserve2",               UINT8, 1),
  ]

class NVME_FW_SLOT_INFO_LOG (Structure):
  _pack_   = 1
  _fields_ = [
  ("ActiveFwInfo",    NVME_ACTIVE_FW_INFO),
  ("Reserved1",       UINT8 * 7),
  ("FwRevisionSlot",  (CHAR8 * 7) * 8),
  ("Reserved2",       UINT8 * 448),
  ]

class NVME_SMART_HEALTH_INFO_LOG (Structure):
  _pack_   = 1
  _fields_ = [
  ("CriticalWarningAvailableSpare",     UINT8 , 1),
  ("CriticalWarningTemperature",        UINT8 , 1),
  ("CriticalWarningReliability",        UINT8 , 1),
  ("CriticalWarningMediaReadOnly",      UINT8 , 1),
  ("CriticalWarningVolatileBackup",     UINT8 , 1),
  ("CriticalWarningReserved",           UINT8 , 3),
  ("CompositeTemp",                     UINT16),
  ("AvailableSpare",                    UINT8),
  ("AvailableSpareThreshold",           UINT8),
  ("PercentageUsed",                    UINT8),
  ("Reserved1",                         UINT8 * 26),
  ("DataUnitsRead",                     UINT8 * 16),
  ("DataUnitsWritten",                  UINT8 * 16),
  ("HostReadCommands",                  UINT8 * 16),
  ("HostWriteCommands",                 UINT8 * 16),
  ("ControllerBusyTime",                UINT8 * 16),
  ("PowerCycles",                       UINT8 * 16),
  ("PowerOnHours",                      UINT8 * 16),
  ("UnsafeShutdowns",                   UINT8 * 16),
  ("MediaAndDataIntegrityErrors",       UINT8 * 16),
  ("NumberErrorInformationLogEntries",  UINT8 * 16),
  ("WarningCompositeTemperatureTime",   UINT32),
  ("CriticalCompositeTemperatureTime",  UINT32),
  ("TemperatureSensor",                 UINT16 * 8),
  ("Reserved2",                         UINT8 * 296),
  ]

