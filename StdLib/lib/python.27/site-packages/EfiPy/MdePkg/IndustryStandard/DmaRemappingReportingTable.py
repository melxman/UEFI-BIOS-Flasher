# DmaRemappingReportingTable.py
#
# Copyright (C) 2017 efipy.core@gmail.com All rights reserved.
#
# DmaRemappingReportingTable.py is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 2 of the License.
#
# EfiPy is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with EfiPy.  If not, see <http://www.gnu.org/licenses/>.
#

from EfiPy  import *

from EfiPy.MdePkg.IndustryStandard.Acpi import EFI_ACPI_DESCRIPTION_HEADER

EFI_ACPI_DMAR_REVISION                    = 0x01

EFI_ACPI_DMAR_FLAGS_INTR_REMAP            = BIT0
EFI_ACPI_DMAR_FLAGS_X2APIC_OPT_OUT        = BIT1

EFI_ACPI_DMAR_TYPE_DRHD                   = 0x00
EFI_ACPI_DMAR_TYPE_RMRR                   = 0x01
EFI_ACPI_DMAR_TYPE_ATSR                   = 0x02
EFI_ACPI_DMAR_TYPE_RHSA                   = 0x03
EFI_ACPI_DMAR_TYPE_ANDD                   = 0x04

EFI_ACPI_DMAR_DRHD_FLAGS_INCLUDE_PCI_ALL  = BIT0

EFI_ACPI_DEVICE_SCOPE_ENTRY_TYPE_PCI_ENDPOINT           = 0x01
EFI_ACPI_DEVICE_SCOPE_ENTRY_TYPE_PCI_BRIDGE             = 0x02
EFI_ACPI_DEVICE_SCOPE_ENTRY_TYPE_IOAPIC                 = 0x03
EFI_ACPI_DEVICE_SCOPE_ENTRY_TYPE_MSI_CAPABLE_HPET       = 0x04
EFI_ACPI_DEVICE_SCOPE_ENTRY_TYPE_ACPI_NAMESPACE_DEVICE  = 0x05

EFI_ACPI_DMAR_ATSR_FLAGS_ALL_PORTS                      = BIT0

class EFI_ACPI_DMAR_STRUCTURE_HEADER (Structure):
  _fields_ = [
    ("Type",    UINT16),
    ("Length",  UINT16),
  ]

class EFI_ACPI_DMAR_PCI_PATH (Structure):
  _fields_ = [
    ("Device",    UINT8),
    ("Function",  UINT8),
  ]

class EFI_ACPI_DMAR_DEVICE_SCOPE_STRUCTURE_HEADER (Structure):
  _fields_ = [
  ("Type",            UINT8),
  ("Length",          UINT8),
  ("Reserved2",       UINT16),
  ("EnumerationId",   UINT8),
  ("StartBusNumber",  UINT8),
  ]

class EFI_ACPI_DMAR_DRHD_HEADER (Structure):
  _fields_ = [
  ("Header",              EFI_ACPI_DMAR_STRUCTURE_HEADER),
  ("Flags",               UINT8),
  ("Reserved",            UINT8),
  ("SegmentNumber",       UINT16),
  ("RegisterBaseAddress", UINT64),
  ]

class EFI_ACPI_DMAR_RMRR_HEADER (Structure):
  _fields_ = [
  ("Header",                            EFI_ACPI_DMAR_STRUCTURE_HEADER),
  ("Reserved",                          UINT8 * 2),
  ("SegmentNumber",                     UINT16),
  ("ReservedMemoryRegionBaseAddress",   UINT64),
  ("ReservedMemoryRegionLimitAddress",  UINT64),
  ]

class EFI_ACPI_DMAR_ATSR_HEADER (Structure):
  _fields_ = [
  ("Header",        EFI_ACPI_DMAR_STRUCTURE_HEADER),
  ("Flags",         UINT8),
  ("Reserved",      UINT8),
  ("SegmentNumber", UINT16),
  ]

class EFI_ACPI_DMAR_RHSA_HEADER (Structure):
  _fields_ = [
  ("Header",              EFI_ACPI_DMAR_STRUCTURE_HEADER),
  ("Reserved",            UINT8 * 4),
  ("RegisterBaseAddress", UINT64),
  ("ProximityDomain",     UINT32),
  ]

class EFI_ACPI_DMAR_ANDD_HEADER (Structure):
  _fields_ = [
  ("Header",            EFI_ACPI_DMAR_STRUCTURE_HEADER),
  ("Reserved",          UINT8 * 3),
  ("AcpiDeviceNumber",  UINT8),
  ]

class EFI_ACPI_DMAR_HEADER (Structure):
  _fields_ = [
  ("Header",            EFI_ACPI_DESCRIPTION_HEADER),
  ("HostAddressWidth",  UINT8),
  ("Flags",             UINT8),
  ("Reserved",          UINT8 * 10),
  ]

