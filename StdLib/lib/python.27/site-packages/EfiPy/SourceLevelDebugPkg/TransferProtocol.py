# TransferProtocol.py
#
# Copyright (C) 2017 efipy.core@gmail.com All rights reserved.
#
# TransferProtocol.py is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 2 of the License.
#
# EfiPy is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with EfiPy.  If not, see <http://www.gnu.org/licenses/>.
#

from EfiPy import *

DEBUG_AGENT_REVISION_03         = ((0 << 16) | 03)
DEBUG_AGENT_REVISION_04         = ((0 << 16) | 04)
DEBUG_AGENT_REVISION            = DEBUG_AGENT_REVISION_04
DEBUG_AGENT_CAPABILITIES        = 0

DEBUG_STARTING_SYMBOL_ATTACH    = 0xFA
DEBUG_STARTING_SYMBOL_NORMAL    = 0xFE
DEBUG_STARTING_SYMBOL_COMPRESS  = 0xFC

class DEBUG_PACKET_HEADER (Structure):
  _pack_   = 1
  _fields_ = [
    ("StartSymbol", UINT8),
    ("Command",     UINT8),
    ("Length",      UINT8),
    ("SequenceNo",  UINT8),
    ("Crc",         UINT16),
    ]

DEBUG_COMMAND_REQUEST      = (0 << 7)
DEBUG_COMMAND_RESPONSE     = (1 << 7)

DEBUG_COMMAND_RESET                       = (DEBUG_COMMAND_REQUEST | 0x00)
DEBUG_COMMAND_GO                          = (DEBUG_COMMAND_REQUEST | 0x01)
DEBUG_COMMAND_BREAK_CAUSE                 = (DEBUG_COMMAND_REQUEST | 0x02)
DEBUG_COMMAND_SET_HW_BREAKPOINT           = (DEBUG_COMMAND_REQUEST | 0x03)
DEBUG_COMMAND_CLEAR_HW_BREAKPOINT         = (DEBUG_COMMAND_REQUEST | 0x04)
DEBUG_COMMAND_SINGLE_STEPPING             = (DEBUG_COMMAND_REQUEST | 0x05)
DEBUG_COMMAND_SET_SW_BREAKPOINT           = (DEBUG_COMMAND_REQUEST | 0x06)
DEBUG_COMMAND_READ_MEMORY                 = (DEBUG_COMMAND_REQUEST | 0x07)
DEBUG_COMMAND_WRITE_MEMORY                = (DEBUG_COMMAND_REQUEST | 0x08)
DEBUG_COMMAND_READ_IO                     = (DEBUG_COMMAND_REQUEST | 0x09)
DEBUG_COMMAND_WRITE_IO                    = (DEBUG_COMMAND_REQUEST | 0x0A)
DEBUG_COMMAND_READ_REGISTER               = (DEBUG_COMMAND_REQUEST | 0x0B)
DEBUG_COMMAND_WRITE_REGISTER              = (DEBUG_COMMAND_REQUEST | 0x0C)
DEBUG_COMMAND_READ_ALL_REGISTERS          = (DEBUG_COMMAND_REQUEST | 0x0D)
DEBUG_COMMAND_ARCH_MODE                   = (DEBUG_COMMAND_REQUEST | 0x0E)
DEBUG_COMMAND_READ_MSR                    = (DEBUG_COMMAND_REQUEST | 0x0F)
DEBUG_COMMAND_WRITE_MSR                   = (DEBUG_COMMAND_REQUEST | 0x10)
DEBUG_COMMAND_SET_DEBUG_SETTING           = (DEBUG_COMMAND_REQUEST | 0x11)
DEBUG_COMMAND_GET_REVISION                = (DEBUG_COMMAND_REQUEST | 0x12)
DEBUG_COMMAND_GET_EXCEPTION               = (DEBUG_COMMAND_REQUEST | 0x13)
DEBUG_COMMAND_SET_VIEWPOINT               = (DEBUG_COMMAND_REQUEST | 0x14)
DEBUG_COMMAND_GET_VIEWPOINT               = (DEBUG_COMMAND_REQUEST | 0x15)
DEBUG_COMMAND_DETACH                      = (DEBUG_COMMAND_REQUEST | 0x16)
DEBUG_COMMAND_CPUID                       = (DEBUG_COMMAND_REQUEST | 0x17)
DEBUG_COMMAND_SEARCH_SIGNATURE            = (DEBUG_COMMAND_REQUEST | 0x18)
DEBUG_COMMAND_HALT                        = (DEBUG_COMMAND_REQUEST | 0x19)

DEBUG_COMMAND_INIT_BREAK                  = (DEBUG_COMMAND_REQUEST | 0x3F)
DEBUG_COMMAND_BREAK_POINT                 = (DEBUG_COMMAND_REQUEST | 0x3E)
DEBUG_COMMAND_MEMORY_READY                = (DEBUG_COMMAND_REQUEST | 0x3D)
DEBUG_COMMAND_PRINT_MESSAGE               = (DEBUG_COMMAND_REQUEST | 0x3C)
DEBUG_COMMAND_ATTACH_BREAK                = (DEBUG_COMMAND_REQUEST | 0x3B)

DEBUG_COMMAND_OK                          = (DEBUG_COMMAND_RESPONSE | 0x00)
DEBUG_COMMAND_RESEND                      = (DEBUG_COMMAND_RESPONSE | 0x01)
DEBUG_COMMAND_ABORT                       = (DEBUG_COMMAND_RESPONSE | 0x02)

DEBUG_COMMAND_IN_PROGRESS                 = (DEBUG_COMMAND_RESPONSE | 0x03)
DEBUG_COMMAND_CONTINUE                    = (DEBUG_COMMAND_RESPONSE | 0x04)

DEBUG_COMMAND_HALT_DEFERRED               = (DEBUG_COMMAND_RESPONSE | 0x05)
DEBUG_COMMAND_HALT_PROCESSED              = (DEBUG_COMMAND_RESPONSE | 0x06)

DEBUG_COMMAND_TIMEOUT                     = (DEBUG_COMMAND_RESPONSE | 0x07)
DEBUG_COMMAND_NOT_SUPPORTED               = (DEBUG_COMMAND_RESPONSE | 0x0F)

DEBUG_DATA_UPPER_LIMIT                    = 0xff

DEBUG_DATA_MAXIMUM_REAL_DATA              = (DEBUG_DATA_UPPER_LIMIT - sizeof (DEBUG_PACKET_HEADER))

class DEBUG_DATA_RESPONSE_BREAK_CAUSE (Structure):
  _pack_   = 1
  _fields_ = [
    ("Cause",         UINT8),
    ("StopAddress",   UINT64),
    ]

DEBUG_DATA_BREAK_CAUSE_UNKNOWN        = 0
DEBUG_DATA_BREAK_CAUSE_HW_BREAKPOINT  = 1
DEBUG_DATA_BREAK_CAUSE_STEPPING       = 2
DEBUG_DATA_BREAK_CAUSE_SW_BREAKPOINT  = 3
DEBUG_DATA_BREAK_CAUSE_USER_HALT      = 4
DEBUG_DATA_BREAK_CAUSE_IMAGE_LOAD     = 5
DEBUG_DATA_BREAK_CAUSE_IMAGE_UNLOAD   = 6
DEBUG_DATA_BREAK_CAUSE_SYSTEM_RESET   = 7
DEBUG_DATA_BREAK_CAUSE_EXCEPTION      = 8
DEBUG_DATA_BREAK_CAUSE_MEMORY_READY   = 9

class DEBUG_DATA_RESPONSE_ARCH_MODE (Structure):
  _pack_   = 1
  _fields_ = [
    ("CpuMode",         UINT8),
    ]

DEBUG_DATA_BREAK_CPU_ARCH_IA16        = 0
DEBUG_DATA_BREAK_CPU_ARCH_IA32        = 1
DEBUG_DATA_BREAK_CPU_ARCH_X64         = 2

class DEBUG_DATA_BREAKPOINT_TYPE (Structure):
  _pack_   = 1
  _fields_ = [
    ("Length",    UINT8, 2),
    ("Access",    UINT8, 2),
    ("Index",     UINT8, 2),
    ("Reserved",  UINT8, 2),
    ]

DEBUG_DATA_BREAKPOINT_MEMORY_ACCESS    = (0x3)
DEBUG_DATA_BREAKPOINT_IO_ACCESS        = (0x2)
DEBUG_DATA_BREAKPOINT_MEMORY_WRITE     = (0x1)
DEBUG_DATA_BREAKPOINT_MEMORY_EXECUTE   = (0x0)
DEBUG_DATA_BREAKPOINT_LENGTH_32        = (0x3)
DEBUG_DATA_BREAKPOINT_LENGTH_64        = (0x2)
DEBUG_DATA_BREAKPOINT_LENGTH_16        = (0x1)
DEBUG_DATA_BREAKPOINT_LENGTH_8         = (0x0)

class DEBUG_DATA_SET_HW_BREAKPOINT (Structure):
  _pack_   = 1
  _fields_ = [
    ("Type",    DEBUG_DATA_BREAKPOINT_TYPE),
    ("Address", UINT64),
    ]

class DEBUG_DATA_CLEAR_HW_BREAKPOINT (Structure):
  _pack_   = 1
  _fields_ = [
    ("IndexMask",    UINT8),
    ]

class DEBUG_DATA_SET_SW_BREAKPOINT (Structure):
  _pack_   = 1
  _fields_ = [
    ("Address",    UINT64),
    ]

class DEBUG_DATA_RESPONSE_SET_SW_BREAKPOINT (Structure):
  _pack_   = 1
  _fields_ = [
    ("OriginalData",    UINT8),
    ]

class DEBUG_DATA_READ_MEMORY (Structure):
  _pack_   = 1
  _fields_ = [
    ("Address", UINT64),
    ("Width",   UINT8),
    ("Count",   UINT16),
    ]

class DEBUG_DATA_WRITE_MEMORY (Structure):
  _pack_   = 1
  _fields_ = [
    ("Address", UINT64),
    ("Width",   UINT8),
    ("Count",   UINT16),
    ("Data",    UINT8 * 1),
    ]

class DEBUG_DATA_READ_IO (Structure):
  _pack_   = 1
  _fields_ = [
    ("Port",  UINT64),
    ("Width", UINT8),
    ]

class DEBUG_DATA_RESPONSE_READ_IO (Structure):
  _pack_   = 1
  _fields_ = [
    ("Data",    UINT8 * 1),
    ]

class DEBUG_DATA_WRITE_IO (Structure):
  _pack_   = 1
  _fields_ = [
    ("Port",  UINT64),
    ("Width", UINT8),
    ("Data",  UINT8 * 1),
    ]

class DEBUG_DATA_READ_REGISTER (Structure):
  _pack_   = 1
  _fields_ = [
    ("Index",  UINT8),
    ]

class DEBUG_DATA_WRITE_REGISTER (Structure):
  _pack_   = 1
  _fields_ = [
    ("Index",   UINT8),
    ("Length",  UINT8),
    ("Data",    UINT8 * 1),
    ]

class DEBUG_DATA_READ_MSR (Structure):
  _pack_   = 1
  _fields_ = [
    ("Index",   UINT32),
    ]

class DEBUG_DATA_RESPONSE_READ_MSR (Structure):
  _pack_   = 1
  _fields_ = [
    ("Value",   UINT64),
    ]

class DEBUG_DATA_WRITE_MSR (Structure):
  _pack_   = 1
  _fields_ = [
    ("Index",   UINT32),
    ("Value",   UINT64),
    ]

class DEBUG_DATA_RESPONSE_GET_REVISION (Structure):
  _pack_   = 1
  _fields_ = [
    ("Revision",      UINT32),
    ("Capabilities",  UINT32),
    ]

class DEBUG_DATA_RESPONSE_GET_REVISION (Structure):
  _pack_   = 1
  _fields_ = [
    ("ExceptionNum",  UINT8),
    ("ExceptionData", UINT32),
    ]

class DEBUG_DATA_SET_DEBUG_SETTING (Structure):
  _pack_   = 1
  _fields_ = [
    ("Key",   UINT8),
    ("Value", UINT8),
    ]

DEBUG_AGENT_SETTING_SMM_ENTRY_BREAK          = 1
DEBUG_AGENT_SETTING_PRINT_ERROR_LEVEL        = 2
DEBUG_AGENT_SETTING_BOOT_SCRIPT_ENTRY_BREAK  = 3

DEBUG_AGENT_ERROR     = BIT0
DEBUG_AGENT_WARNING   = BIT1
DEBUG_AGENT_INFO      = BIT2
DEBUG_AGENT_VERBOSE   = BIT3

class DEBUG_DATA_SET_VIEWPOINT (Structure):
  _pack_   = 1
  _fields_ = [
    ("ViewPoint",   UINT32),
    ]

class DEBUG_DATA_RESPONSE_GET_VIEWPOINT (Structure):
  _pack_   = 1
  _fields_ = [
    ("ViewPoint",   UINT32),
    ]

class DEBUG_DATA_CPUID (Structure):
  _pack_   = 1
  _fields_ = [
    ("Eax",   UINT32),
    ("Ecx",   UINT32),
    ]

class DEBUG_DATA_RESPONSE_CPUID (Structure):
  _pack_   = 1
  _fields_ = [
    ("Eax",   UINT32),
    ("Ebx",   UINT32),
    ("Eax",   UINT32),
    ("Edx",   UINT32),
    ]

class DEBUG_DATA_SEARCH_SIGNATURE (Structure):
  _pack_   = 1
  _fields_ = [
    ("Start",       UINT64),
    ("Count",       UINT32),
    ("Alignment",   UINT32),
    ("Positive",    BOOLEAN),
    ("DataLength",  UINT8),
    ("Data",        UINT8 * 1),
    ]

class DEBUG_DATA_RESPONSE_SEARCH_SIGNATURE (Structure):
  _pack_   = 1
  _fields_ = [
    ("Address",       UINT64),
    ]

