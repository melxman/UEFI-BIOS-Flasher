# TcpIoLib.py
#
# Copyright (C) 2017 efipy.core@gmail.com All rights reserved.
#
# TcpIoLib.py is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 2 of the License.
#
# EfiPy is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with EfiPy.  If not, see <http://www.gnu.org/licenses/>.
#

from EfiPy  import *

from EfiPy.MdePkg.Protocol.Tcp4 import EFI_TCP4_PROTOCOL, EFI_TCP4_CONNECTION_TOKEN, EFI_TCP4_IO_TOKEN, EFI_TCP4_CLOSE_TOKEN, EFI_TCP4_LISTEN_TOKEN
from EfiPy.MdePkg.Protocol.Tcp6 import EFI_TCP6_PROTOCOL, EFI_TCP6_CONNECTION_TOKEN, EFI_TCP6_IO_TOKEN, EFI_TCP6_CLOSE_TOKEN, EFI_TCP6_LISTEN_TOKEN
from EfiPy.MdeModulePkg.Library.NetLib import IP_VERSION_4, IP_VERSION_6

TCP_VERSION_4 = IP_VERSION_4
TCP_VERSION_6 = IP_VERSION_6

TCP_GET_MAPPING_TIMEOUT = 100000000L
class TCP4_IO_CONFIG_DATA (Structure):
  _fields_ = [
  ("LocalIp",     EFI_IPv4_ADDRESS),
  ("SubnetMask",  EFI_IPv4_ADDRESS),
  ("Gateway",     EFI_IPv4_ADDRESS),
  ("StationPort", UINT16),
  ("RemoteIp",    EFI_IPv4_ADDRESS),
  ("RemotePort",  UINT16),
  ("ActiveFlag",  BOOLEAN),
  ]

class TCP6_IO_CONFIG_DATA (Structure):
  _fields_ = [
  ("StationPort", UINT16),
  ("RemoteIp",    EFI_IPv6_ADDRESS),
  ("RemotePort",  UINT16),
  ("ActiveFlag",  BOOLEAN),
  ]

class TCP_IO_CONFIG_DATA (Union):
  _fields_ = [
  ("Tcp4IoConfigData", TCP4_IO_CONFIG_DATA),
  ("Tcp6IoConfigData", TCP6_IO_CONFIG_DATA),
  ]

class TCP_IO_PROTOCOL (Union):
  _fields_ = [
  ("Tcp4", POINTER(EFI_TCP4_PROTOCOL)),
  ("Tcp6", POINTER(EFI_TCP6_PROTOCOL)),
  ]

class TCP_IO_CONNECTION_TOKEN (Union):
  _fields_ = [
  ("Tcp4Token", EFI_TCP4_CONNECTION_TOKEN),
  ("Tcp6Token", EFI_TCP6_CONNECTION_TOKEN),
  ]

class TCP_IO_IO_TOKEN (Union):
  _fields_ = [
  ("Tcp4Token", EFI_TCP4_IO_TOKEN),
  ("Tcp6Token", EFI_TCP6_IO_TOKEN),
  ]

class TCP_IO_CLOSE_TOKEN (Union):
  _fields_ = [
  ("Tcp4Token", EFI_TCP4_CLOSE_TOKEN),
  ("Tcp6Token", EFI_TCP6_CLOSE_TOKEN),
  ]

class TCP_IO_LISTEN_TOKEN (Union):
  _fields_ = [
  ("Tcp4Token", EFI_TCP4_LISTEN_TOKEN),
  ("Tcp6Token", EFI_TCP6_LISTEN_TOKEN),
  ]

class TCP_IO (Structure):
  _fields_ = [
  ("TcpVersion",    UINT8),
  ("Image",         EFI_HANDLE),
  ("Controller",    EFI_HANDLE),
  ("Handle",        EFI_HANDLE),
  ("Tcp",           TCP_IO_PROTOCOL),
  ("NewTcp",        TCP_IO_PROTOCOL),
  ("ConnToken",     TCP_IO_CONNECTION_TOKEN),
  ("TxToken",       TCP_IO_IO_TOKEN),
  ("RxToken",       TCP_IO_IO_TOKEN),
  ("CloseToken",    TCP_IO_CLOSE_TOKEN),
  ("ListenToken",   TCP_IO_LISTEN_TOKEN),
  ("IsConnDone",    BOOLEAN),
  ("IsTxDone",      BOOLEAN),
  ("IsRxDone",      BOOLEAN),
  ("IsCloseDone",   BOOLEAN),
  ("IsListenDone",  BOOLEAN),
  ]

