# UefiBootManagerLib.py
#
# Copyright (C) 2017 efipy.core@gmail.com All rights reserved.
#
# UefiBootManagerLib.py is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 2 of the License.
#
# EfiPy is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with EfiPy.  If not, see <http://www.gnu.org/licenses/>.
#

from EfiPy  import *

from EfiPy.MdePkg.Protocol.DriverHealth import EFI_DRIVER_HEALTH_PROTOCOL, EFI_DRIVER_HEALTH_HII_MESSAGE, EFI_DRIVER_HEALTH_STATUS
from EfiPy.MdePkg.Protocol.SimpleTextIn import EFI_INPUT_KEY
from EfiPy.MdePkg.Uefi.UefiInternalFormRepresentation import EFI_HII_HANDLE

LoadOptionTypeDriver                = 0
LoadOptionTypeSysPrep               = 1
LoadOptionTypeBoot                  = 2
LoadOptionTypePlatformRecovery      = 3
LoadOptionTypeMax                   = 4
EFI_BOOT_MANAGER_LOAD_OPTION_TYPE   = UINTN

LoadOptionNumberMax = 0x10000
LoadOptionNumberUnassigned = LoadOptionNumberMax
EFI_BOOT_MANAGER_LOAD_OPTION_NUMBER = UINTN

class EFI_BOOT_MANAGER_LOAD_OPTION (Structure):
  _fields_ = [
  ("OptionNumber",      UINTN),
  ("OptionType",        EFI_BOOT_MANAGER_LOAD_OPTION_TYPE),
  ("Attributes",        UINT32),
  ("Description",       POINTER(CHAR16)),
  ("FilePath",          POINTER(EFI_DEVICE_PATH_PROTOCOL)),
  ("OptionalData",      POINTER(UINT8)),
  ("OptionalDataSize",  UINT32),
  ("VendorGuid",        EFI_GUID),
  ("Status",            EFI_STATUS),
  ("ExitData",          POINTER(CHAR16)),
  ("ExitDataSize",      UINTN),
  ]

class EFI_BOOT_MANAGER_KEY_OPTION (Structure):
  _pack_   = 1
  _fields_ = [
  ("KeyData",       EFI_BOOT_KEY_DATA),
  ("BootOptionCrc", UINT32),
  ("BootOption",    UINT16),
  ("Keys",          EFI_INPUT_KEY * 3),
  ("OptionNumber",  UINT16),
  ]

EFI_BOOT_MANAGER_SHIFT_PRESSED    = 0x00000001
EFI_BOOT_MANAGER_CONTROL_PRESSED  = 0x00000002
EFI_BOOT_MANAGER_ALT_PRESSED      = 0x00000004
EFI_BOOT_MANAGER_LOGO_PRESSED     = 0x00000008
EFI_BOOT_MANAGER_MENU_KEY_PRESSED = 0x00000010
EFI_BOOT_MANAGER_SYS_REQ_PRESSED  = 0x00000020

class EFI_BOOT_MANAGER_DRIVER_HEALTH_INFO (Structure):
  _fields_ = [
  ("*DriverHealth",       EFI_DRIVER_HEALTH_PROTOCOL),
  ("DriverHealthHandle",  EFI_HANDLE),
  ("ControllerHandle",    EFI_HANDLE),
  ("ChildHandle",         EFI_HANDLE),
  ("MessageList",         POINTER(EFI_DRIVER_HEALTH_HII_MESSAGE)),
  ("HiiHandle",           EFI_HII_HANDLE),
  ("HealthStatus",        EFI_DRIVER_HEALTH_STATUS),
  ]

