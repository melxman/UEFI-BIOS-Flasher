# UdpIoLib.py
#
# Copyright (C) 2017 efipy.core@gmail.com All rights reserved.
#
# UdpIoLib.py is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 2 of the License.
#
# EfiPy is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with EfiPy.  If not, see <http://www.gnu.org/licenses/>.
#

from EfiPy  import *

from EfiPy.MdePkg.Protocol.SimpleNetwork import EFI_SIMPLE_NETWORK_MODE
from EfiPy.MdePkg.Protocol.Udp4 import EFI_UDP4_COMPLETION_TOKEN, EFI_UDP4_SESSION_DATA, EFI_UDP4_TRANSMIT_DATA, EFI_UDP4_PROTOCOL, EFI_UDP4_CONFIG_DATA
from EfiPy.MdePkg.Protocol.Udp6 import EFI_UDP6_COMPLETION_TOKEN, EFI_UDP6_SESSION_DATA, EFI_UDP6_TRANSMIT_DATA, EFI_UDP6_PROTOCOL, EFI_UDP6_CONFIG_DATA

from EfiPy.MdeModulePkg.Library.NetLib import NET_BUF

class UDP_IO (Structure):
  pass

UDP_IO_RX_SIGNATURE  = SIGNATURE_32 ('U', 'D', 'P', 'R')
UDP_IO_TX_SIGNATURE  = SIGNATURE_32 ('U', 'D', 'P', 'T')
UDP_IO_SIGNATURE     = SIGNATURE_32 ('U', 'D', 'P', 'I')

UDP_IO_UDP4_VERSION  = 4
UDP_IO_UDP6_VERSION  = 6

class UDP_END_POINT (Structure):
  _fields_ = [
  ("LocalAddr",   EFI_IP_ADDRESS),
  ("LocalPort",   UINT16),
  ("RemoteAddr",  EFI_IP_ADDRESS),
  ("RemotePort",  UINT16),
  ]

UDP_IO_CALLBACK = CFUNCTYPE (
  VOID,
  POINTER(NET_BUF),       #   IN *Packet,
  POINTER(UDP_END_POINT), #   IN *EndPoint,
  EFI_STATUS,             #   IN IoStatus,
  PVOID                   #   IN *Context
  )

class UDP_COMPLETION_TOKEN (Union):
  _fields_ = [
  ("Udp4",   EFI_UDP4_COMPLETION_TOKEN),
  ("Udp6",   EFI_UDP6_COMPLETION_TOKEN),
  ]

class UDP_RX_TOKEN (Structure):
  _fields_ = [
  ("Signature", UINT32),
  ("UdpIo",     POINTER(UDP_IO)),
  ("CallBack",  UDP_IO_CALLBACK),
  ("Context",   PVOID),
  ("HeadLen",   UINT32),
  ("Token",     UDP_COMPLETION_TOKEN),
  ]

class UDP_SESSION_DATA (Union):
  _fields_ = [
  ("Udp4",  EFI_UDP4_SESSION_DATA),
  ("Udp6",  EFI_UDP6_SESSION_DATA),
  ]

class UDP_TRANSMIT_DATA (Union):
  _fields_ = [
  ("Udp4",  EFI_UDP4_TRANSMIT_DATA),
  ("Udp6",  EFI_UDP6_TRANSMIT_DATA),
  ]

class UDP_TX_TOKEN (Structure):
  _fields_ = [
  ("Signature", UINT32),
  ("Link",      LIST_ENTRY),
  ("UdpIo",     POINTER(UDP_IO)),
  ("CallBack",  UDP_IO_CALLBACK),
  ("Packet",    POINTER(NET_BUF)),
  ("Context",   PVOID),
  ("Gateway",   EFI_IPv4_ADDRESS),
  ("Session",   UDP_SESSION_DATA),
  ("Token",     UDP_COMPLETION_TOKEN),
  ("Data",      UDP_TRANSMIT_DATA),
  ]

class UDP_IO_Protocol (Union):
  _fields_ = [
  ("Udp4",     POINTER(EFI_UDP4_PROTOCOL)),
  ("Udp6",     POINTER(EFI_UDP6_PROTOCOL)),
  ]

class UDP_IO_Config (Union):
  _fields_ = [
  ("Udp4",     POINTER(EFI_UDP4_CONFIG_DATA)),
  ("Udp6",     POINTER(EFI_UDP6_CONFIG_DATA)),
  ]

UDP_IO._fields_ = [
  ("Signature",     UINT32),
  ("Link",          LIST_ENTRY),
  ("RefCnt",        INTN),
  ("UdpVersion",    UINT8),
  ("Controller",    EFI_HANDLE),
  ("Image",         EFI_HANDLE),
  ("UdpHandle",     EFI_HANDLE),
  ("SnpMode",       EFI_SIMPLE_NETWORK_MODE),
  ("SentDatagram",  LIST_ENTRY),
  ("RecvRequest",   POINTER(UDP_RX_TOKEN)),
  ("Protocol",      UDP_IO_Protocol),
  ("Config",        UDP_IO_Config),
  ]

